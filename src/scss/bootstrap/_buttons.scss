//
// Base styles
//

.btn {
  // scss-docs-start btn-css-vars
  --#{$prefix}btn-padding-x: #{$btn-padding-x};
  --#{$prefix}btn-padding-y: #{$btn-padding-y};
  --#{$prefix}btn-font-family: #{$btn-font-family};
  @include rfs($btn-font-size, --#{$prefix}btn-font-size);
  --#{$prefix}btn-font-weight: #{$btn-font-weight};
  --#{$prefix}btn-line-height: #{$btn-line-height};
  --#{$prefix}btn-color: #{$btn-color};
  --#{$prefix}btn-bg: transparent;
  --#{$prefix}btn-border-width: #{$btn-border-width};
  --#{$prefix}btn-border-color: transparent;
  --#{$prefix}btn-border-radius: #{$btn-border-radius};
  --#{$prefix}btn-hover-border-color: transparent;
  --#{$prefix}btn-box-shadow: #{$btn-box-shadow};
  --#{$prefix}btn-disabled-opacity: #{$btn-disabled-opacity};
  --#{$prefix}btn-focus-box-shadow: 0 0 0 #{$btn-focus-width} rgba(var(--#{$prefix}btn-focus-shadow-rgb), .5);
  // scss-docs-end btn-css-vars

  display: inline-block;
  padding: var(--#{$prefix}btn-padding-y) var(--#{$prefix}btn-padding-x);
  font-family: var(--#{$prefix}btn-font-family);
  @include font-size(var(--#{$prefix}btn-font-size));
  font-weight: var(--#{$prefix}btn-font-weight);
  line-height: var(--#{$prefix}btn-line-height);
  color: var(--#{$prefix}btn-color);
  text-align: center;
  text-decoration: if($link-decoration == none, null, none);
  white-space: $btn-white-space;
  vertical-align: middle;
  cursor: if($enable-button-pointers, pointer, null);
  user-select: none;
  border: var(--#{$prefix}btn-border-width) solid var(--#{$prefix}btn-border-color);
  @include border-radius(var(--#{$prefix}btn-border-radius));
  @include gradient-bg(var(--#{$prefix}btn-bg));
  @include box-shadow(var(--#{$prefix}btn-box-shadow));
  @include transition($btn-transition);

  @media (hover: hover) {

    &:hover {
      color: var(--#{$prefix}btn-hover-color);
      text-decoration: if($link-hover-decoration == underline, none, null);
      background-color: var(--#{$prefix}btn-hover-bg);
      border-color: var(--#{$prefix}btn-hover-border-color);
    }
  }

  .btn-check + &:hover {
    // override for the checkbox/radio buttons
    color: var(--#{$prefix}btn-color);
    background-color: var(--#{$prefix}btn-bg);
    border-color: var(--#{$prefix}btn-border-color);
  }

  &:focus-visible {
    color: var(--#{$prefix}btn-hover-color);
    @include gradient-bg(var(--#{$prefix}btn-hover-bg));
    border-color: var(--#{$prefix}btn-hover-border-color);
    outline: 0;
    // Avoid using mixin so we can pass custom focus shadow properly
    @if $enable-shadows {
      box-shadow: var(--#{$prefix}btn-box-shadow), var(--#{$prefix}btn-focus-box-shadow);
    } @else {
      box-shadow: var(--#{$prefix}btn-focus-box-shadow);
    }
  }

  .btn-check:focus-visible + & {
    border-color: var(--#{$prefix}btn-hover-border-color);
    outline: 0;
    // Avoid using mixin so we can pass custom focus shadow properly
    @if $enable-shadows {
      box-shadow: var(--#{$prefix}btn-box-shadow), var(--#{$prefix}btn-focus-box-shadow);
    } @else {
      box-shadow: var(--#{$prefix}btn-focus-box-shadow);
    }
  }

  .btn-check:checked + &,
  :not(.btn-check) + &:active,
  &:first-child:active,
  &.active,
  &.show {
    color: var(--#{$prefix}btn-active-color);
    background-color: var(--#{$prefix}btn-active-bg);
    // Remove CSS gradients if they're enabled
    background-image: if($enable-gradients, none, null);
    border-color: var(--#{$prefix}btn-active-border-color);
    @include box-shadow(var(--#{$prefix}btn-active-shadow));

    &:focus-visible {
      // Avoid using mixin so we can pass custom focus shadow properly
      @if $enable-shadows {
        box-shadow: var(--#{$prefix}btn-active-shadow), var(--#{$prefix}btn-focus-box-shadow);
      } @else {
        box-shadow: var(--#{$prefix}btn-focus-box-shadow);
      }
    }
  }

  .btn-check:checked:focus-visible + & {
    // Avoid using mixin so we can pass custom focus shadow properly
    @if $enable-shadows {
      box-shadow: var(--#{$prefix}btn-active-shadow), var(--#{$prefix}btn-focus-box-shadow);
    } @else {
      box-shadow: var(--#{$prefix}btn-focus-box-shadow);
    }
  }

  &:disabled,
  &.disabled,
  fieldset:disabled & {
    color: var(--#{$prefix}btn-disabled-color);
    pointer-events: none;
    background-color: var(--#{$prefix}btn-disabled-bg);
    background-image: if($enable-gradients, none, null);
    border-color: var(--#{$prefix}btn-disabled-border-color);
    opacity: var(--#{$prefix}btn-disabled-opacity);
    @include box-shadow(none);
  }
}


//
// Alternate buttons
//

// scss-docs-start btn-variant-loops
@each $color, $value in $theme-colors {
  .btn-#{$color} {
    @if $color == "light" {
      @include button-variant(
        $value,
        $value,
        $hover-background: shade-color($value, $btn-hover-bg-shade-amount),
        $hover-border: shade-color($value, $btn-hover-border-shade-amount),
        $active-background: shade-color($value, $btn-active-bg-shade-amount),
        $active-border: shade-color($value, $btn-active-border-shade-amount)
      );
    } @else if $color == "dark" {
      @include button-variant(
        $value,
        $value,
        $hover-background: tint-color($value, $btn-hover-bg-tint-amount),
        $hover-border: tint-color($value, $btn-hover-border-tint-amount),
        $active-background: tint-color($value, $btn-active-bg-tint-amount),
        $active-border: tint-color($value, $btn-active-border-tint-amount)
      );
    } @else {
      @include button-variant($value, $value);
    }
  }
}

@each $color, $value in $theme-colors {
  .btn-outline-#{$color} {
    @include button-outline-variant($value);
  }
}
// scss-docs-end btn-variant-loops

.btn-warm {
  --#{$prefix}btn-font-size: .75rem;
  --#{$prefix}btn-font-weight: 500;
  --#{$prefix}btn-border-width: .0625rem;

  --#{$prefix}btn-color: var(--#{$prefix}white);
  --#{$prefix}btn-hover-color: var(--#{$prefix}white);
  --#{$prefix}btn-active-color: var(--#{$prefix}white);

  --#{$prefix}btn-bg: linear-gradient(90deg, #FF6536 0%, #FF9271 50%, #FF6536 100%);
  --#{$prefix}btn-hover-bg: linear-gradient(90deg, #FF6536 0%, #FF9271 50%, #FF6536 100%);
  --#{$prefix}btn-active-bg: linear-gradient(90deg, #FF6536 0%, #FF9271 50%, #FF6536 100%);

  --#{$prefix}btn-border-color: linear-gradient(90deg, rgba(255, 255, 255, .15) 0%, rgba(255, 255, 255, 1) 50%, rgba(255, 255, 255, .15) 100%);
  --#{$prefix}btn-hover-border-color: linear-gradient(90deg, rgba(255, 255, 255, .15) 0%, rgba(255, 255, 255, 1) 50%, rgba(255, 255, 255, .15) 100%);
  --#{$prefix}btn-active-border-color: linear-gradient(90deg, rgba(255, 255, 255, .15) 0%, rgba(255, 255, 255, 1) 50%, rgba(255, 255, 255, .15) 100%);

  box-shadow: 0 0 .75rem 0 rgba(255, 255, 255, 0.70) inset;
}

.btn-teal-400 {
  --#{$prefix}btn-color: var(--#{$prefix}white);
  --#{$prefix}btn-hover-color: var(--#{$prefix}white);
  --#{$prefix}btn-active-color: var(--#{$prefix}white);
  --#{$prefix}btn-disabled-color: var(--#{$prefix}white);

  --#{$prefix}btn-active-bg: var(--#{$prefix}teal-400);
  --#{$prefix}btn-active-border-color: var(--#{$prefix}teal-400);
}

.btn-transparent-teal-400 {
  --#{$prefix}btn-color: var(--#{$prefix}black);
  --#{$prefix}btn-bg: transparent;
  --#{$prefix}btn-border-color: transparent;
}

.btn-plaintext {
  --#{$prefix}btn-border-width: 0;
  --#{$prefix}btn-border-radius: 0;
  --#{$prefix}btn-padding-x: 0;
  --#{$prefix}btn-padding-y: 0;

  --#{$prefix}btn-bg: transparent;
  --#{$prefix}btn-border-color: transparent;
}

.btn-lg-transparent {

  @include media-breakpoint-up(lg) {
    --#{$prefix}btn-hover-color: var(--#{$prefix}btn-color);
    --#{$prefix}btn-active-color: var(--#{$prefix}btn-color);
    --#{$prefix}btn-disabled-color: var(--#{$prefix}btn-color);

    --#{$prefix}btn-bg: transparent;
    --#{$prefix}btn-hover-bg: var(--#{$prefix}btn-bg);
    --#{$prefix}btn-active-bg: var(--#{$prefix}btn-bg);
    --#{$prefix}btn-disabled-bg: var(--#{$prefix}btn-bg);

    --#{$prefix}btn-border-color: transparent;
    --#{$prefix}btn-hover-border-color: var(--#{$prefix}btn-border-color);
    --#{$prefix}btn-active-border-color: var(--#{$prefix}btn-border-color);
    --#{$prefix}btn-disabled-border-color: var(--#{$prefix}btn-border-color);
  }
}

.btn-bg-gradient {
  background: var(--#{$prefix}btn-bg);

  @media (hover: hover) {

    &:is(:hover, :focus-visible) {
      background: var(--#{$prefix}btn-hover-bg);
    }
  }

  &:is(:active, .active, .show) {
    background: var(--#{$prefix}btn-active-bg);
  }
}

.btn-border-gradient {
  border: none;
  position: relative;

  &::after {
    content: '';
    display: block;
    user-select: none;
    pointer-events: none;
    background: var(--#{$prefix}btn-border-color);
    padding: var(--#{$prefix}btn-border-width);
    background: var(--#{$prefix}btn-border-color);
    mask:
      linear-gradient(#fff 0 0) content-box,
      linear-gradient(#fff 0 0);
    mask-composite: exclude;
    border-radius: inherit;
    position: absolute;
    inset: 0;
  }

  @media (hover: hover) {

    &:is(:hover, :focus-visible) {

      &::after {
        background: var(--#{$prefix}btn-hover-border-color);
      }
    }
  }

  &:is(:active, .active, .show) {

    &::after {
      background: var(--#{$prefix}btn-active-border-color);
    }
  }
}

.btn-filter {
  --#{$prefix}btn-padding-x: .25rem;
  --#{$prefix}btn-padding-y: .25rem;

  display: inline-flex;
  align-items: center;
  justify-content: center;

  .icon {
    --_size: 1.5rem;
  }
}


//
// Link buttons
//

// Make a button look and behave like a link
.btn-link {
  --#{$prefix}btn-font-weight: #{$font-weight-normal};
  --#{$prefix}btn-color: #{$btn-link-color};
  --#{$prefix}btn-bg: transparent;
  --#{$prefix}btn-border-color: transparent;
  --#{$prefix}btn-hover-color: #{$btn-link-hover-color};
  --#{$prefix}btn-hover-border-color: transparent;
  --#{$prefix}btn-active-color: #{$btn-link-hover-color};
  --#{$prefix}btn-active-border-color: transparent;
  --#{$prefix}btn-disabled-color: #{$btn-link-disabled-color};
  --#{$prefix}btn-disabled-border-color: transparent;
  --#{$prefix}btn-box-shadow: 0 0 0 #000; // Can't use `none` as keyword negates all values when used with multiple shadows
  --#{$prefix}btn-focus-shadow-rgb: #{$btn-link-focus-shadow-rgb};

  text-decoration: $link-decoration;
  @if $enable-gradients {
    background-image: none;
  }

  @media (hover: hover) {

    &:hover,
    &:focus-visible {
      text-decoration: $link-hover-decoration;
    }

    &:hover {
      color: var(--#{$prefix}btn-hover-color);
    }
  }


  &:focus-visible {
    color: var(--#{$prefix}btn-color);
  }
  // No need for an active state here
}



.btn-phone {
  --bs-btn-border-width: 0;
  --bs-btn-padding-x: 0;
  --bs-btn-padding-y: 0;

  --bs-btn-font-size: .9375rem;
  --bs-btn-font-weight: 600;
  --bs-btn-line-height: 1;

  --bs-btn-color: var(--bs-primary);

  display: inline-flex;
  align-items: end;
  gap: .5rem;

  .icon {
    --_size: .875rem;
  }
}


//
// Button Sizes
//

.btn-40px {
  --bs-btn-border-radius: 5rem;
  --bs-btn-padding-x: 1.375rem;
  --bs-btn-padding-y: .5rem;

  height: 2.5rem;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  text-align: center;
}

.btn-lg {
  @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $btn-font-size-lg, $btn-border-radius-lg);
}

.btn-sm {
  --bs-btn-font-weight: 500;
  @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $btn-font-size-sm, $btn-border-radius-sm);
}
